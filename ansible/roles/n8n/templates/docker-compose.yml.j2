---
version: "3"

volumes:
  {{ n8n_volume }}_db:
    driver: local
  {{ n8n_volume }}_storage:
    driver: local
  {{ n8n_volume }}_redis:
    driver: local

x-shared: &shared
  restart: unless-stopped
  security_opt:
    - no-new-privileges:true
  networks:
    - traefik_default
  environment:
    DB_TYPE: postgresdb
    DB_POSTGRESDB_HOST: postgres
    DB_POSTGRESDB_PORT: 5432
    DB_POSTGRESDB_DATABASE: ${POSTGRES_DB}
    DB_POSTGRESDB_USER: ${POSTGRES_NON_ROOT_USER}
    DB_POSTGRESDB_PASSWORD: ${POSTGRES_NON_ROOT_PASSWORD}
    EXECUTIONS_MODE: queue
    QUEUE_BULL_REDIS_HOST: redis
    QUEUE_HEALTH_CHECK_ACTIVE: 'true'
    N8N_BASIC_AUTH_ACTIVE: 'true'
    N8N_BASIC_AUTH_USER: ${N8N_BASIC_AUTH_USER}
    N8N_BASIC_AUTH_PASSWORD: ${N8N_BASIC_AUTH_PASSWORD}
    GENERIC_TIMEZONE: "America/New_York"
    TZ: "America/New_York"
  links:
    - postgres
    - redis
  volumes:
    - {{ n8n_volume }}_storage:/home/node/
  depends_on:
    redis:
      condition: service_healthy
    postgres:
      condition: service_healthy

services:
  postgres:
    image: postgres:11
    container_name: n8n-postgres
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    networks:
      - traefik_default
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_NON_ROOT_USER: ${POSTGRES_NON_ROOT_USER}
      POSTGRES_NON_ROOT_PASSWORD: ${POSTGRES_NON_ROOT_PASSWORD}
    volumes:
      - {{ n8n_volume }}_db:/var/lib/postgresql/data
      - ./init-data.sh:/docker-entrypoint-initdb.d/init-data.sh
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -h localhost -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 10

  redis:
    image: redis:6-alpine
    container_name: n8n-redis
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    networks:
      - traefik_default
    volumes:
      - {{ n8n_volume }}_redis:/data
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping"]
      interval: 5s
      timeout: 5s
      retries: 10

  n8n:
    <<: *shared
    image: n8nio/n8n
    container_name: n8n
    command: /bin/sh -c "n8n start --tunnel"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.n8n.entrypoints=http"
      - "traefik.http.routers.n8n.rule=Host(`{{ n8n_uri }}`)"
      - "traefik.http.middlewares.n8n-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.n8n.middlewares=n8n-https-redirect"
      - "traefik.http.routers.n8n-secure.entrypoints=https"
      - "traefik.http.routers.n8n-secure.rule=Host(`{{ n8n_uri }}`)"
      - "traefik.http.routers.n8n-secure.tls=true"
      - "traefik.http.routers.n8n-secure.service=n8n"
      - "traefik.http.services.n8n.loadbalancer.server.port={{ n8n_port }}"
      - "traefik.docker.network=traefik_default"

  n8n-worker:
    <<: *shared
    image: n8nio/n8n
    container_name: n8n-worker
    command: /bin/sh -c "sleep 5; n8n worker"
    depends_on:
      - n8n

networks:
  traefik_default:
    external: true
