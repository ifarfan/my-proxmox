---
- name: Create node_exporter group
  ansible.builtin.group:
    name: "{{ node_exporter_group }}"
    state: present
    system: true

- name: Create node_exporter user
  ansible.builtin.user:
    name: "{{ node_exporter_user }}"
    groups: "{{ node_exporter_group }}"
    append: true
    create_home: false
    home: /
    shell: /usr/sbin/nologin
    system: true

- name: Download and unarchive node_exporter
  ansible.builtin.unarchive:
    src: "{{ node_exporter_download_url }}"
    dest: /tmp
    remote_src: true
    mode: 0755
  register: node_exporter_download_check

- name: Move node_exporter binary   # noqa 503
  ansible.builtin.copy:
    src: "/tmp/node_exporter-{{ node_exporter_version }}.linux-{{ node_exporter_arch }}/node_exporter"
    dest: "{{ node_exporter_bin_path }}"
    mode: 0755
    remote_src: true
  notify: restart node_exporter
  when: node_exporter_download_check is changed

- name: Copy node_exporter systemd file
  ansible.builtin.template:
    src: node_exporter.service.j2
    dest: /etc/systemd/system/node_exporter.service
    mode: 0644
  notify: restart node_exporter

- name: Ensure node_exporter is running and enabled at boot
  ansible.builtin.service:
    name: node_exporter
    state: started
    enabled: true

- name: Wait until node_exporter is up
  ansible.builtin.uri:
    url: "http://localhost:{{ node_exporter_port }}/"
    return_content: true
  until: metrics_output.status == 200
  retries: 12       # Retries for 12 * 10 secs = 120 secs = 2 mins
  delay: 10
  register: metrics_output
  failed_when: "'Metrics' not in metrics_output.content"
